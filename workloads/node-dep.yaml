# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nodebackend
  namespace: ajo
  labels:
    app:  nodebackend
  annotations:
    fluxcd.io/automated: "true"
   
spec:
  selector:
    matchLabels:
      app: nodebackend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  nodebackend
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  nodebackend
        image:  ugoslim/nodebackend
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
      #   env:
      #   - name: DB_HOST
      #     valueFrom:
      #       configMapKeyRef:
      #         name: nodebackend
      #         key: DB_HOST
        ports:
        - containerPort:  3000
          name:  nodebackend
      #   volumeMounts:
      #   - name: localtime
      #     mountPath: /etc/localtime
      # volumes:
      #   - name: localtime
      #     hostPath:
      #       path: /usr/share/zoneinfo/Asia/Taipei
      restartPolicy: Always
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: nodebackend
  namespace: ajo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodebackend
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      # scale up if usage is above
      # 99% of the requested CPU (10m)
      targetAverageUtilization: 70
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: nodebackend
  namespace: ajo
spec:
  selector:
    app: nodebackend
  type: ClusterIP
  ports:
  - name: nodebackend
    protocol: TCP
    port: 3000
    targetPort: 3000